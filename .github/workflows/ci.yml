name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  PYTHON_VERSION: '3.12'
  DOCKER_IMAGE: defect-detection
  GCP_PROJECT: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: us-central1
  SERVICE_NAME: defect-detection-service
  SECRET_KEY: ${{ secrets.APP_SECRET_KEY }}
  MODEL_BUCKET: ${{ secrets.GCP_MODEL_BUCKET }}

jobs:
  quality:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install black isort pytest pytest-cov
          
      - name: Check code formatting
        run: |
          black . --check --exclude="\.git/"
          isort . --check --skip .git
          
      - name: Run tests
        run: |
          pytest tests/ --cov=. --cov-report=xml
          
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: quality
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.GCP_PROJECT }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          
      - name: Configure Docker
        run: gcloud auth configure-docker
        
      - name: Build and push
        run: |
          docker build -t gcr.io/${{ env.GCP_PROJECT }}/${{ env.DOCKER_IMAGE }}:${{ github.sha }} .
          docker push gcr.io/${{ env.GCP_PROJECT }}/${{ env.DOCKER_IMAGE }}:${{ github.sha }}

  deploy:
    name: Deploy to Cloud Run
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.GCP_PROJECT }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          
      - name: Deploy
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image gcr.io/${{ env.GCP_PROJECT }}/${{ env.DOCKER_IMAGE }}:${{ github.sha }} \
            --region ${{ env.GCP_REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --set-env-vars="MODEL_BUCKET=${{ env.MODEL_BUCKET }},SECRET_KEY=${{ env.SECRET_KEY }}"
